/**
 * 
 */
package org.asd.kyros.shared.alpha;

import java.util.Map;
import javax.annotation.Generated;
import org.asd.kyros.shared.alpha.AddressFormData.BillingAddress;
import org.asd.kyros.shared.alpha.AddressFormData.BillingState;
import org.asd.kyros.shared.alpha.AddressFormData.Company;
import org.asd.kyros.shared.alpha.AddressFormData.Division;
import org.asd.kyros.shared.alpha.AddressFormData.SameAsShipping;
import org.asd.kyros.shared.alpha.AddressFormData.ShippingAddress;
import org.asd.kyros.shared.alpha.AddressFormData.ShippingComments;
import org.asd.kyros.shared.alpha.AddressFormData.ShippingState;
import org.asd.kyros.shared.alpha.AddressFormData.ShippingZipCode;
import org.asd.kyros.shared.delta.CompanyLookupCall;
import org.asd.kyros.shared.delta.DivisionFromCompanyLookupCall;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.ValidationRule;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 * 
 * @generated
 */
@Generated(value = "org.eclipse.scout.sdk.workspace.dto.formdata.FormDataDtoUpdateOperation", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class AddressFormData extends AbstractFormData {

  private static final long serialVersionUID = 1L;

  public AddressFormData() {
  }

  public BillingAddress getBillingAddress() {
    return getFieldByClass(BillingAddress.class);
  }

  public BillingState getBillingState() {
    return getFieldByClass(BillingState.class);
  }

  public Company getCompany() {
    return getFieldByClass(Company.class);
  }

  public Division getDivision() {
    return getFieldByClass(Division.class);
  }

  public SameAsShipping getSameAsShipping() {
    return getFieldByClass(SameAsShipping.class);
  }

  public ShippingAddress getShippingAddress() {
    return getFieldByClass(ShippingAddress.class);
  }

  public ShippingComments getShippingComments() {
    return getFieldByClass(ShippingComments.class);
  }

  public ShippingState getShippingState() {
    return getFieldByClass(ShippingState.class);
  }

  public ShippingZipCode getShippingZipCode() {
    return getFieldByClass(ShippingZipCode.class);
  }

  public static class BillingAddress extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public BillingAddress() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class BillingState extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public BillingState() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class Company extends AbstractValueFieldData<Long> {

    private static final long serialVersionUID = 1L;

    public Company() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.LOOKUP_CALL, CompanyLookupCall.class);
      ruleMap.put(ValidationRule.ZERO_NULL_EQUALITY, true);
    }
  }

  public static class Division extends AbstractValueFieldData<Long> {

    private static final long serialVersionUID = 1L;

    public Division() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.LOOKUP_CALL, DivisionFromCompanyLookupCall.class);
      ruleMap.put(ValidationRule.MASTER_VALUE_FIELD, Company.class);
      ruleMap.put(ValidationRule.MASTER_VALUE_REQUIRED, true);
      ruleMap.put(ValidationRule.ZERO_NULL_EQUALITY, true);
    }
  }

  public static class SameAsShipping extends AbstractValueFieldData<Boolean> {

    private static final long serialVersionUID = 1L;

    public SameAsShipping() {
    }
  }

  public static class ShippingAddress extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public ShippingAddress() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class ShippingComments extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public ShippingComments() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class ShippingState extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public ShippingState() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class ShippingZipCode extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public ShippingZipCode() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }
}

/**
 * 
 */
package org.asd.kyros.client.ui.forms;

import org.asd.kyros.client.ui.forms.DesktopForm.MainBox;
import org.asd.kyros.client.ui.forms.DesktopForm.ViewHandler;
import org.asd.kyros.shared.Icons;
import org.asd.kyros.shared.services.DesktopFormData;
import org.asd.kyros.shared.services.IDesktopService;
import org.eclipse.scout.commons.annotations.FormData;
import org.eclipse.scout.commons.annotations.FormData.SdkCommand;
import org.eclipse.scout.commons.annotations.Order;
import org.eclipse.scout.commons.exception.ProcessingException;
import org.eclipse.scout.rt.client.ui.form.AbstractForm;
import org.eclipse.scout.rt.client.ui.form.AbstractFormHandler;
import org.eclipse.scout.rt.client.ui.form.fields.groupbox.AbstractGroupBox;
import org.eclipse.scout.service.SERVICES;

/**
 * @author AndrewL
 *
 */
@FormData(value = DesktopFormData.class, sdkCommand = FormData.SdkCommand.CREATE)
public class DesktopForm extends AbstractForm{

/**
 * @throws org.eclipse.scout.commons.exception.ProcessingException
 */
public DesktopForm() throws ProcessingException{
super();
}
@Override
protected boolean getConfiguredAskIfNeedSave(){
return false;
}
@Override
protected int getConfiguredDisplayHint(){
return DISPLAY_HINT_VIEW;
}
@Override
protected String getConfiguredDisplayViewId(){
return VIEW_ID_CENTER;
}
@Override
protected String getConfiguredIconId(){
  return Icons.EclipseScout;
}
/**
 * @throws org.eclipse.scout.commons.exception.ProcessingException
 */
public void startView() throws ProcessingException{
startInternal(new ViewHandler());
}
/**
 * @return the MainBox
 */
public MainBox getMainBox(){
return getFieldByClass(MainBox.class);
}

@Order(10.0)
public class MainBox extends AbstractGroupBox{
}
public class ViewHandler extends AbstractFormHandler{

@Override
protected void execLoad() throws ProcessingException{
IDesktopService service = SERVICES.getService(IDesktopService.class);
DesktopFormData formData = new DesktopFormData();
exportFormData(formData);
formData = service.load(formData);
importFormData(formData);

}
}
}
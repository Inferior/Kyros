/**
 * 
 */
package org.asd.kyros.shared.alpha;

import java.util.Date;
import java.util.Map;
import javax.annotation.Generated;
import org.asd.kyros.shared.alpha.SpecificationFormData.Category;
import org.asd.kyros.shared.alpha.SpecificationFormData.FilePath;
import org.asd.kyros.shared.alpha.SpecificationFormData.IcNrProperty;
import org.asd.kyros.shared.alpha.SpecificationFormData.IssueDate;
import org.asd.kyros.shared.alpha.SpecificationFormData.IssuingCompany;
import org.asd.kyros.shared.alpha.SpecificationFormData.Number;
import org.asd.kyros.shared.alpha.SpecificationFormData.Revision;
import org.asd.kyros.shared.alpha.SpecificationFormData.Scope;
import org.asd.kyros.shared.alpha.SpecificationFormData.SearchWord;
import org.asd.kyros.shared.alpha.SpecificationFormData.Status;
import org.asd.kyros.shared.alpha.SpecificationFormData.SuperseededBy;
import org.asd.kyros.shared.delta.IssuingCompanyLookupCall;
import org.asd.kyros.shared.delta.SpecCategoryCodeType;
import org.asd.kyros.shared.delta.SpecStatusCodeType;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.ValidationRule;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 * 
 * @generated
 */
@Generated(value = "org.eclipse.scout.sdk.workspace.dto.formdata.FormDataDtoUpdateOperation", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class SpecificationFormData extends AbstractFormData {

  private static final long serialVersionUID = 1L;

  public SpecificationFormData() {
  }

  public Category getCategory() {
    return getFieldByClass(Category.class);
  }

  public FilePath getFilePath() {
    return getFieldByClass(FilePath.class);
  }

  /**
   * access method for property IcNr.
   */
  public String getIcNr() {
    return getIcNrProperty().getValue();
  }

  /**
   * access method for property IcNr.
   */
  public void setIcNr(String icNr) {
    getIcNrProperty().setValue(icNr);
  }

  public IcNrProperty getIcNrProperty() {
    return getPropertyByClass(IcNrProperty.class);
  }

  public IssueDate getIssueDate() {
    return getFieldByClass(IssueDate.class);
  }

  public IssuingCompany getIssuingCompany() {
    return getFieldByClass(IssuingCompany.class);
  }

  public Number getNumber() {
    return getFieldByClass(Number.class);
  }

  public Revision getRevision() {
    return getFieldByClass(Revision.class);
  }

  public Scope getScope() {
    return getFieldByClass(Scope.class);
  }

  public SearchWord getSearchWord() {
    return getFieldByClass(SearchWord.class);
  }

  public Status getStatus() {
    return getFieldByClass(Status.class);
  }

  public SuperseededBy getSuperseededBy() {
    return getFieldByClass(SuperseededBy.class);
  }

  public static class Category extends AbstractValueFieldData<Integer> {

    private static final long serialVersionUID = 1L;

    public Category() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.CODE_TYPE, SpecCategoryCodeType.class);
      ruleMap.put(ValidationRule.ZERO_NULL_EQUALITY, true);
    }
  }

  public static class FilePath extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public FilePath() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class IcNrProperty extends AbstractPropertyData<String> {

    private static final long serialVersionUID = 1L;

    public IcNrProperty() {
    }
  }

  public static class IssueDate extends AbstractValueFieldData<Date> {

    private static final long serialVersionUID = 1L;

    public IssueDate() {
    }
  }

  public static class IssuingCompany extends AbstractValueFieldData<Long> {

    private static final long serialVersionUID = 1L;

    public IssuingCompany() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.LOOKUP_CALL, IssuingCompanyLookupCall.class);
      ruleMap.put(ValidationRule.ZERO_NULL_EQUALITY, true);
    }
  }

  public static class Number extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public Number() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class Revision extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public Revision() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class Scope extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public Scope() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 345);
    }
  }

  public static class SearchWord extends AbstractValueFieldData<String> {

    private static final long serialVersionUID = 1L;

    public SearchWord() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class Status extends AbstractValueFieldData<Integer> {

    private static final long serialVersionUID = 1L;

    public Status() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.CODE_TYPE, SpecStatusCodeType.class);
      ruleMap.put(ValidationRule.ZERO_NULL_EQUALITY, true);
    }
  }

  public static class SuperseededBy extends AbstractValueFieldData<Long> {

    private static final long serialVersionUID = 1L;

    public SuperseededBy() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.ZERO_NULL_EQUALITY, true);
    }
  }
}
